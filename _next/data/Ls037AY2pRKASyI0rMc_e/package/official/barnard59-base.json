{"pageProps":{"listName":"official","name":"barnard59-base","info":{"name":"barnard59-base","version":"1.1.0","description":"Linked Data pipelines","main":"index.js","type":"module","scripts":{"coverage":"codecov","test":"stricter-standard && c8 --reporter=lcov --reporter=text mocha"},"repository":{"type":"git","url":"git://github.com/zazuko/barnard59-base.git"},"keywords":[],"author":"Thomas Bergwinkl <bergi@axolotlfarm.org> (https://www.bergnet.org/people/bergi/card#me)","license":"MIT","bugs":{"url":"https://github.com/zazuko/barnard59-base/issues"},"homepage":"https://github.com/zazuko/barnard59-base","dependencies":{"@opentelemetry/api":"^1.0.1","duplexify":"^4.1.1","glob":"^7.1.7","readable-stream":"^3.0.6","through2":"^4.0.2"},"devDependencies":{"barnard59-core":"^1.0.0","c8":"^7.7.3","codecov":"^3.8.2","get-stream":"^6.0.1","isstream":"^0.1.2","mocha":"^9.0.1","rdf-utils-fs":"^2.1.0","stricter-standard":"^0.2.0"},"engines":{"node":">= 14.0.0"}},"operations":[{"label":"Combine","comment":"Combines multiple streams to a single stream connecting them in the given order.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/combine.js#default>\n]."},{"label":"Concat","comment":"Concatenates the content of the given streams to a single stream.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/concat.js#default>\n]."},{"label":"Concat (Object)","comment":"Concatenates the content of the given streams to a single stream.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/concat.js#object>\n]."},{"label":"Filter","comment":"Forwards incoming chunks if they pass the filter function.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/filter.js#default>\n]."},{"label":"Flatten","comment":"Separates incoming arrays into their elements and emits each element as a single chunk.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/flatten.js#default>\n]."},{"label":"For Each","comment":"Calls a sub pipeline for each incoming chunk.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/forEach.js#default>\n]."},{"label":"Glob","comment":"Match files using the given pattern and emits each filename as a single chunk.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/glob.js#default>\n]."},{"label":"Parse JSON","comment":"Converts each chunk to an object by calling JSON.parse().","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/json.js#parse>\n]."},{"label":"Serialize JSON","comment":"Converts each chunk to a JSON string by calling JSON.stringify().","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/json.js#stringify>\n]."},{"label":"Limit","comment":"Limits the amount of forwarded chunks and discards any chunks after reaching the limit.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/limit.js#default>\n]."},{"label":"Map","comment":"Converts each chunk using the given function.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/map.js#default>\n]."},{"label":"/dev/null","comment":"Dummy output stream, just like /dev/null.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/nul.js#default>\n]."},{"label":"Offset","comment":"Discards all chunks before the given offset.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/offset.js#default>\n]."},{"label":"stdout","comment":"Writes the incoming data to stdout and also forwards the data to the stream output.","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/stdout.js#default>\n]."},{"label":"To String","comment":"Converts each chunk to a string by calling .toString().","snippet":"<> a p:Step;\n  code:implementedBy [ a code:EcmaScript;\n  code:link <node:barnard59-base/toString.js#default>\n]."}]},"__N_SSG":true}